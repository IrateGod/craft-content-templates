{"version":3,"file":"modal/dist/scripts/modal.js","mappings":"uFAEA,gBA8BEA,YAAaC,GACXC,KAAKC,GAAKF,EAASE,GACnBD,KAAKE,MAAQH,EAASG,MACtBF,KAAKG,YAAcJ,EAASI,YAC5BH,KAAKI,QAAUC,EAAEL,KAAKM,cACxB,CAOQA,cAEN,MAAO,WAAWN,KAAKE,YAAYF,KAAKG,sBAC1C,E,GC9CEI,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,C,MCtBA,oBA2DuC,IAA5BG,OAAOC,mBAChBD,OAAOC,iBAAmB,CAAC,GAG7BD,OAAOC,iBAAiBC,MApDxB,MAQEnB,YAAaC,GACXC,KAAKkB,UAAYnB,EAASmB,UAE1BlB,KAAKmB,iBAAmB,CACtB,IAAI,UAAgB,CAClBjB,MAAOkB,MAAMC,EAAE,oBAAqB,SACpClB,YAAaiB,MAAMC,EAAE,oBAAqB,oCAG9CrB,KAAKmB,iBAAiBG,QACjBvB,EAASoB,iBACTI,KAAKC,GAAoB,IAAI,UAAgBA,MAGlD,MAAMC,EAAiBpB,EAAE,yBACzBL,KAAK0B,aAAe,IAAIC,QAAQV,MAAMQ,GACtC,MAAMG,EAAgBvB,EAAE,wBACrBwB,SAASJ,GACZzB,KAAKmB,iBAAiBW,SAASN,IAC7BnB,EAAE,gCACC0B,OAAOP,EAAgBpB,SACvByB,SAASD,GACZJ,EAAgBpB,QAAQ4B,GAAG,YAAaC,SACJ,IAAvBT,EAAgBvB,GAEzBD,KAAK0B,aAAaQ,OAGlBC,QAAQC,IAAIZ,EAAgBvB,G,GAE9B,GAEN,E","sources":["webpack://craft-content-templates/./src/web/assets/modal/src/scripts/ContentTemplate.ts","webpack://craft-content-templates/webpack/bootstrap","webpack://craft-content-templates/./src/web/assets/modal/src/scripts/main.ts"],"sourcesContent":["import ContentTemplateSettings from './ContentTemplateSettings'\n\nexport default class ContentTemplate {\n  /**\n   * The content template ID.\n   * @public\n   */\n  public readonly id?: number\n\n  /**\n   * The content template title.\n   * @public\n   */\n  public readonly title: string\n\n  /**\n   * The content template description.\n   * @public\n   */\n  public readonly description: string\n\n  /**\n   * The content template button.\n   * @public\n   */\n  public readonly $button: JQuery<HTMLElement>\n\n  /**\n   * The constructor.\n   * @param settings - A `ContentTemplateSettings` object.\n   * @public\n   */\n  constructor (settings: ContentTemplateSettings) {\n    this.id = settings.id\n    this.title = settings.title\n    this.description = settings.description\n    this.$button = $(this._buttonHtml())\n  }\n\n  /**\n   * Gets the button HTML to use for this content template in the selection modal.\n   * @returns the button HTML as a string\n   * @private\n   */\n  private _buttonHtml (): string {\n    // TODO: something better than this!\n    return `<button>${this.title}<br>${this.description}</button>`\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import ContentTemplate from './ContentTemplate'\nimport ContentTemplateSettings from './ContentTemplateSettings'\n\ndeclare global {\n  interface Window {\n    ContentTemplates: {\n      Modal?: typeof ContentTemplatesModal\n    }\n  }\n}\n\nclass ContentTemplatesModal {\n  public readonly contentTemplates: ContentTemplate[]\n  public readonly elementId: number\n  public readonly garnishModal: any\n\n  /**\n   * The constructor.\n   */\n  constructor (settings: ModalSettings) {\n    this.elementId = settings.elementId\n    // Always start off with a blank one\n    this.contentTemplates = [\n      new ContentTemplate({\n        title: Craft.t('content-templates', 'Blank'),\n        description: Craft.t('content-templates', 'Start off with a clean slate.')\n      })\n    ]\n    this.contentTemplates.push(\n      ...settings.contentTemplates\n        .map((contentTemplate) => new ContentTemplate(contentTemplate))\n    )\n\n    const $modal: JQuery = $('<div class=\"modal\" />')\n    this.garnishModal = new Garnish.Modal($modal)\n    const $body: JQuery = $('<div class=\"body\" />')\n      .appendTo($modal)\n    this.contentTemplates.forEach((contentTemplate) => {\n      $('<div class=\"ct-container\" />')\n        .append(contentTemplate.$button)\n        .appendTo($body)\n      contentTemplate.$button.on('activate', (_: JQuery.Event) => {\n        if (typeof contentTemplate.id === 'undefined') {\n          // The blank option\n          this.garnishModal.hide()\n        } else {\n          // TODO: POST request when we have a controller method for it\n          console.log(contentTemplate.id)\n        }\n      })\n    })\n  }\n}\n\ninterface ModalSettings extends Object {\n  contentTemplates: ContentTemplateSettings[]\n  elementId: number\n}\n\nif (typeof window.ContentTemplates === 'undefined') {\n  window.ContentTemplates = {}\n}\n\nwindow.ContentTemplates.Modal = ContentTemplatesModal\n"],"names":["constructor","settings","this","id","title","description","$button","$","_buttonHtml","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","window","ContentTemplates","Modal","elementId","contentTemplates","Craft","t","push","map","contentTemplate","$modal","garnishModal","Garnish","$body","appendTo","forEach","append","on","_","hide","console","log"],"sourceRoot":""}